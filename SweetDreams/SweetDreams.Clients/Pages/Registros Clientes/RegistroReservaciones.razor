@page "/RReservaciones"

@using System.IO
@using System.Net.Http
@using Models
@using SweetDreams.Clients.Services;

@attribute [Authorize]

@inject HttpClient Http
@inject IToastService toast
@inject ILocalStorageService LocalStorageService

<EditForm Model="reservacion">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <h3>Registro Reservaciones</h3>
        </div>
        <div class="card-body">
            <form>
                <div class="form-group">
                    <label>Cliente: @cliente.ClienteId</label>
                    <label>@cliente.Nombres</label>
                    <label>@cliente.NombreUsuario</label>
                    <label>@cliente.Telefono</label>
                    <label>@cliente.Correo</label>
                    <label>@cliente.Clave</label>
                    <label>@cliente.Accesibilidad</label>
                    <label>@cliente.Token</label>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label>Tipo Habitacion</label>
                        <div class="input-group">
                            <select class="form-control" @bind="FiltroHabitacion">
                                <option value="0">Todo</option>
                                <option value="1">Individual</option>
                                <option value="2">Doble</option>
                                <option value="3">Suite Máster</option>
                                <option value="4">Suite Junior</option>
                            </select>
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="@(u => ConsultarHabitaciones())"><i class="oi oi-list-rich" /> Consultar</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="table-responsive text-nowrap">
                    <table class="table table-striped">
                        <thead class="thead-light">
                            <tr>
                                <th>No. Habitación</th>
                                <th>Tipo</th>
                                <th>Caracteriscas</th>
                                <th>Precio</th>
                                <th>Estado</th>
                                <th>Foto</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody class="bg-white">
                            @for (int i = 0; i < ListaHabitacion.Count; i++)
                            {
                                int index = i;
                                Seleccion.Add(false);
                                <tr>
                                    <td>@ListaHabitacion[i].NumeroHabitacion</td>
                                    <td>@ListaHabitacion[i].Tipo</td>
                                    <td>@ListaHabitacion[i].Caracteriscas</td>
                                    <td>@ListaHabitacion[i].Precio</td>
                                    <td>@ListaHabitacion[i].Estado</td>
                                    <td><img src="@ListaHabitacion[i].Foto" style="height:80px;width:80px" /></td>
                                    <td><button type="button" class="btn btn-lg btn-primary" @onclick="(() => Seleccionar(index))"> Seleccionar</button><input type="checkbox" disabled @bind="Seleccion[index]" class="form-check-input col-1" /></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @*Aqui termina la tabla para la seleccion de habitaciones*@

                &nbsp;
                &nbsp;
                &nbsp;
                &nbsp;
                &nbsp;

                <div class="form-group">
                    <label>Fecha Inicio:</label>
                    <InputDate @bind-Value="reservacion.FechaInicio" class="form-control" />
                    <ValidationMessage For="@(() => reservacion.FechaInicio)" />
                </div>

                <div class="form-group">
                    <label>Fecha Salida:</label>
                    <InputDate @bind-Value="reservacion.FechaSalida" class="form-control" />
                    <ValidationMessage For="@(() => reservacion.FechaSalida)" />
                </div>

                <div class="form-group">
                    <label>Cantidad de Adultos:</label>
                    <select class="form-control" @bind="CantidadAdultoSeleccionado">
                        <option value="0" disabled selected>Seleccione una cantidad</option>
                        <option value="1">1</option>
                        <option value="2">2</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Cantidad de Niños:</label>
                    <select class="form-control" @bind="CantidadNinoSeleccionado">
                        <option value="0">Ninguno</option>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                    </select>
                </div>

                <div class="form-group">
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Agregar"> Agregar</button>
                </div>

                @*Detalle*@
                @*La Tabla*@
                <div class="table-responsive text-nowrap" style="position: relative; height:200px; overflow: auto; display: block;">
                    <table class="table table-striped">
                        <thead class="thead-light">
                            <tr>
                                <th>No. Habitación</th>
                                <th>Tipo de Habitación</th>
                                <th>Cantidad Adultos</th>
                                <th>Cantidad Niños</th>
                                <th>Precio</th>
                            </tr>
                        </thead>
                        @*Asignacion de los datos del Detalle*@
                        <tbody class="bg-light">
                            @foreach (var item in reservacion.ReservacionDetalle)
                            {
                                <tr>
                                    <td>@item.NumeroHabitacion</td>
                                    <td>@item.Tipo</td>
                                    <td>@item.CantidadAdultos</td>
                                    <td>@item.CantidadNinos</td>
                                    <td>@item.Precio</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="form-group">
                    <label>Balance:</label>
                    <InputNumber @bind-Value="reservacion.Balance" class="form-control" readonly="true" />
                    <ValidationMessage For="@(() => reservacion.Balance)" />
                </div>

                <div class="form-group">
                    <label>Tarjeta de Credito:</label>
                    <InputText @bind-Value="reservacion.Tarjeta" />
                </div>

                <div class="form-group">
                    <label>Fecha Expiracion:</label>
                    <InputDate @bind-Value="reservacion.FechaExpiracion" class="form-control" />
                    <ValidationMessage For="@(() => reservacion.FechaExpiracion)" />
                </div>

                <div class="form-group">
                    <label>Codigo de Seguridad:</label>
                    <InputText @bind-Value="reservacion.Codigo" />
                </div>
            </form>
        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="submit" class="btn btn-lg btn-success oi oi-cloud-upload" @onclick="Guardar"> Guardar</button>
            </div>
        </div>
    </div>

</EditForm>

@code {

    [Parameter]
    public int Id { get; set; }

    public int CantidadAdultoSeleccionado { get; set; }
    public int CantidadNinoSeleccionado { get; set; }
    public string FiltroCliente { get; set; }
    public string FiltroHabitacion { get; set; }

    Reservaciones reservacion = new Reservaciones();
    Habitacion habitacion = new Habitacion();
    Cliente cliente = new Cliente();

    private List<Habitacion> ListaHabitacion { get; set; }

    public List<bool> Seleccion { get; set; }

    public string Criterio { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Nuevo();
        cliente = await LocalStorageService.GetItem<Cliente>("Clientes");
    }

    private void Nuevo()
    {
        reservacion = new Reservaciones();
        ListaHabitacion = new List<Habitacion>();
        Seleccion = new List<bool>();
        CantidadAdultoSeleccionado = 0;
        CantidadNinoSeleccionado = 0;
        Criterio = string.Empty;
    }

    public async Task ConsultarHabitaciones()
    {
        ListaHabitacion = (await Http.GetFromJsonAsync<Habitacion[]>($"http://localhost:5000/Api/Habitacion")).ToList();
        ListaHabitacion = ListaHabitacion.Where(h => h.Estado == true).ToList();

        switch (FiltroHabitacion)
        {
            case "0":
                break;
            case "1":
                ListaHabitacion = ListaHabitacion.Where(h => h.Tipo == "Individual").ToList();
                break;
            case "2":
                ListaHabitacion = ListaHabitacion.Where(h => h.Tipo == "Doble").ToList();
                break;
            case "3":
                ListaHabitacion = ListaHabitacion.Where(h => h.Tipo == "Suite Máster").ToList();
                break;
            case "4":
                ListaHabitacion = ListaHabitacion.Where(h => h.Tipo == "Suite Junior").ToList();
                break;
        }
    }

    public void Seleccionar(int index)
    {
        for (int i = 0; i < Seleccion.Count(); i++)
        {
            if (Seleccion[i] == true)
                Seleccion[i] = false;
        }

        Seleccion[index] = true;

        habitacion = ListaHabitacion[index];
    }


    public void Agregar()
    {
        if (habitacion.HabitacionId == 0)
        {
            toast.ShowInfo("Debe seleccionar una habitación");
            return;
        }

        if (CantidadAdultoSeleccionado < 1)
        {
            toast.ShowInfo("Debe seleccionar como minimo un adulto");
            return;
        }

        reservacion.ReservacionDetalle.Add(new ReservacionesDetalle
        {
            DetalleId = 0,
            ReservacionId = reservacion.ReservacionId,
            NumeroHabitacion = habitacion.NumeroHabitacion,
            CantidadAdultos = CantidadAdultoSeleccionado,
            CantidadNinos = CantidadNinoSeleccionado,
            Tipo = habitacion.Tipo,
            Precio = habitacion.Precio,
            HabitacionId = habitacion.HabitacionId
        });

        reservacion.Balance += habitacion.Precio;
        habitacion.Estado = false;

        habitacion = new Habitacion();
        for (int i = 0; i < Seleccion.Count(); i++)
        {
            if (Seleccion[i] == true)
                Seleccion[i] = false;
        }
    }

    private async Task Guardar()
    {
        var guardado = await Http.PostAsJsonAsync("http://localhost:5000/Api/Reservacion", reservacion);

        var estado = await guardado.Content.ReadFromJsonAsync<bool>();

        if (estado)
        {
            toast.ShowSuccess("Guardado correctamente");
            Nuevo();
        }
        else
            toast.ShowError("Guardado incorrecto");

    }
}
