@page "/CReservaciones"

@using Models
@using System.Net.Http
@using Reportes

@inject HttpClient Http
@inject IToastService toast

    <div class="card-img">
        <div class="card-header">
            <h1>Consulta de Reservaciones Clientes</h1>
        </div>

        <div class="card-body">
            <form>
                <div class="form-row">
                    <div class="form-group">
                        <label>Filtrar por Fecha</label>
                        <select class="form-control" @bind="FiltroFecha">
                            <option value="0">Todo</option>
                            <option value="1">Fecha Inicio</option>
                        </select>
                    </div>
                    &nbsp;
                    <div class="form-group">
                        <label>Desde</label>
                        <input type="date" @bind="Desde" class="form-control" />
                    </div>
                    &nbsp;
                    <div class="form-group">
                        <label>Hasta</label>
                        <input type="date" @bind="Hasta" class="form-control" />
                    </div>
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    &nbsp;

                    <div class="form-group">

                        <label>Filtro</label>

                        <select class="form-control" @bind="Filtro">
                            <option value="0">Todo</option>
                            <option value="1">ReservacionId</option>
                            <option value="2">ClienteId</option>
                            <option value="3">Nombre de Cliente</option>
                            <option value="3">Nombre de Cliente Usuario</option>
                        </select>

                    </div>

                    &nbsp;

                    <div class="form-group">
                        <label>Criterio</label>
                        <div class="input-group">
                            <input type="text" @bind="Criterio" class="form-control">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="@(u => Consultar())"><i class="oi oi-list-rich" /> Consultar</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="table-responsive text-nowrap">
                    <table class="table table-striped">
                        <thead class="thead-light">
                            <tr>
                                <th>Nombre de Cliente</th>
                                <th>Nombre de Cliente Usuario</th>
                                <th>FechaInicio</th>
                                <th>FechaSalida</th>
                                <th>Tarjeta</th>
                                <th>Balance</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody class="bg-white">
                            @foreach (var item in ListaReservaciones)
                            {
                                <tr>
                                    <td>@item.NombreCliente</td>
                                    <td>@item.ClienteUsuario</td>
                                    <td>@item.FechaInicio</td>
                                    <td>@item.FechaSalida</td>
                                    <td>@item.Tarjeta</td>
                                    <td>@item.Balance</td>
                                    <td><a href="@($"RReservaciones/{item.ReservacionId}")">Mostrar</a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </form>
        </div>



        <div class="card-footer">
            <div class="form-group text-center">
                <button class="btn btn-lg btn-primary oi oi-file" @onclick="GenerarReporte"> Generar Reporte</button>
            </div>

            <form class="text-center">
                @if (Data is { })
                {
                    <object data="@pdfContent" width="1000" height="500"></object>
                }
            </form>
        </div>
    </div>

@code
{
    private List<Reservaciones> ListaReservaciones { get; set; }

    private DateTime Desde { get; set; } = DateTime.Now;
    private DateTime Hasta { get; set; } = DateTime.Now;

    public string Filtro { get; set; }
    private string FiltroFecha { get; set; }

    public string Criterio { get; set; }

    public string NombreCliente { get; set; }

    string pdfContent = "";

    byte[] Data;


    protected override void OnInitialized()
    {
        Nuevo();
    }

    private void Nuevo()
    {
        ListaReservaciones = new List<Reservaciones>();
        Filtro = "0";
        FiltroFecha = "0";
        Criterio = string.Empty;
    }

    public async Task Consultar()
    {
        ListaReservaciones = (await Http.GetFromJsonAsync<Reservaciones[]>($"http://localhost:5000/Api/Reservacion")).ToList();

        switch (Filtro)
        {
            case "0": //Todo
                break;
            case "1"://ReservacionId
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        int id = Convert.ToInt32(Criterio);
                        ListaReservaciones = ListaReservaciones.Where(r => r.ReservacionId == id).ToList();
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                        ListaReservaciones.Clear();
                    }
                }
                else
                {
                    ListaReservaciones = ListaReservaciones.Where(r => true).OrderBy(r => r.ReservacionId).ToList();
                }
                break;
            case "2"://ClienteId
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        int id = Convert.ToInt32(Criterio);
                        ListaReservaciones = ListaReservaciones.Where(r => r.ClienteId == id).ToList();
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                        ListaReservaciones.Clear();
                    }
                }
                else
                {
                    ListaReservaciones = ListaReservaciones.Where(r => true).OrderBy(r => r.ClienteId).ToList();
                }
                break;
            case "3"://Nombre cliente
                if (Criterio.Trim().Length > 0)
                {
                    ListaReservaciones = ListaReservaciones.Where(r => r.NombreCliente.Contains(Criterio)).ToList();
                }
                else
                {
                    ListaReservaciones = ListaReservaciones.Where(r => true).OrderBy(r => r.NombreCliente).ToList();
                }
                break;
            case "4"://nombre cliente usuario
                if (Criterio.Trim().Length > 0)
                {
                    ListaReservaciones = ListaReservaciones.Where(r => r.ClienteUsuario.Contains(Criterio)).ToList();
                }
                else
                {
                    ListaReservaciones = ListaReservaciones.Where(r => true).OrderBy(r => r.ClienteUsuario).ToList();
                }
                break;
        }

        switch (FiltroFecha)
        {
            case "0": //Nada
                break;
            case "1": //Fecha Inicio
                ListaReservaciones = ListaReservaciones.Where(r => r.FechaInicio >= Desde && r.FechaInicio <= Hasta).ToList();
                break;
        }
    }

    private void GenerarReporte()
    {
        ReporteReservaciones reservaciones= new ReporteReservaciones();

        Data = reservaciones.Reporte(ListaReservaciones);

        pdfContent = "data:application/pdf;base64,";
        pdfContent += System.Convert.ToBase64String(Data);
    }
}