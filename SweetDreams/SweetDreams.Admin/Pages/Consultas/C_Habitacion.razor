@page "/CHabitacion"

@using Models
@using System.Net.Http
@using Reportes

@inject HttpClient Http
@inject IToastService toast

<div class="card-img">
    <div class="card-header">
        <h1>Consulta de Habitación</h1>
    </div>

    <div class="card-body">
        <form>
            <div class="form-row">
                <div class="form-group">
                    <label>Filtro</label>
                    <select class="form-control" @bind="Filtro">
                        <option value="0">Todo</option>
                        <option value="1">Habitación Id</option>
                        <option value="2">Número habitación</option>
                        <option value="3">Tipo</option>
                        <option value="4">Características</option>
                        <option value="5">Precio</option>
                    </select>
                </div>
                &nbsp;
                <div class="form-group">
                    <label>Criterio</label>
                    <div class="input-group">
                        <input type="text" @bind="Criterio" class="form-control">
                        <div class="input-group-append">
                            <button type="button" class="btn btn-primary input-group-text" @onclick="@(u => Consultar())"><i class="oi oi-list-rich" /> Consultar</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="table-responsive text-nowrap">
                <table class="table table-striped">
                    <thead class="thead-light">
                        <tr>
                            <th>Habitación ID</th>
                            <th>Numero Habitación</th>
                            <th>Tipo</th>
                            <th>Caracteríscas</th>
                            <th>Precio</th>
                            <th>Estado</th>
                            <th>Foto</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody class="bg-white">
                        @foreach (var item in ListaHabitacion)
                        {
                            <tr>
                                <td>@item.HabitacionId</td>
                                <td>@item.NumeroHabitacion</td>
                                <td>@item.Tipo</td>
                                <td>@item.Caracteriscas</td>
                                <td>@item.Precio</td>
                                <td>@item.Estado</td>
                                <td><img src="@item.Foto" style="height:80px;width:80px" /></td>
                                <td><a href="@($"RHabitacion/{item.HabitacionId}")">Mostrar</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </form>

        <div class="card-footer">
            <div class="form-group text-center">
                <button target="_blank" class="btn btn-lg btn-primary oi oi-file" @onclick="GenerarReporte"> Generar Reporte</button>
            </div>

            <form>
                @if (Data is { })
                {
                    <object data="@pdfContent" width="1000" height="500"></object>
                }
            </form>
        </div>
    </div>
</div>

@code
{
    private List<Habitacion> ListaHabitacion { get; set; }

    public string Filtro { get; set; }

    public string Criterio { get; set; }

    string pdfContent = "";

    byte[] Data;

    protected override void OnInitialized()
    {
        Nuevo();
    }

    private void Nuevo()
    {
        ListaHabitacion = new List<Habitacion>();
        Filtro = "0";
        Criterio = string.Empty;
    }

    private async Task Consultar()
    {
        ListaHabitacion = (await Http.GetFromJsonAsync<Habitacion[]>($"http://localhost:5000/Api/Habitacion")).ToList();

        switch (Filtro)
        {
            case "0"://Todo
                break;
            case "1"://HabitacionId
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        int id = Convert.ToInt32(Criterio);
                        ListaHabitacion = ListaHabitacion.Where(h => h.HabitacionId == id).ToList();
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                        ListaHabitacion.Clear();
                    }
                }
                else
                {
                    ListaHabitacion = ListaHabitacion.Where(h => true).OrderBy(h => h.HabitacionId).ToList();
                }
                break;
            case "2"://Numero habitacion
                if(Criterio.Length > 0)
                {
                    ListaHabitacion = ListaHabitacion.Where(h => h.NumeroHabitacion.Contains(Criterio)).ToList();
                }
                else
                {
                    ListaHabitacion = ListaHabitacion.Where(h => true).OrderBy(h => h.NumeroHabitacion).ToList();
                }
                break;
            case "3"://Tipo
                if (Criterio.Length > 0)
                {
                    ListaHabitacion = ListaHabitacion.Where(h => h.Tipo.Contains(Criterio)).ToList();
                }
                else
                {
                    ListaHabitacion = ListaHabitacion.Where(h => true).OrderBy(h => h.Tipo).ToList();
                }
                break;
            case "4"://caracteristicas
                if (Criterio.Length > 0)
                {
                    ListaHabitacion = ListaHabitacion.Where(h => h.Caracteriscas.Contains(Criterio)).ToList();
                }
                else
                {
                    ListaHabitacion = ListaHabitacion.Where(h => true).OrderBy(h => h.Caracteriscas).ToList();
                }
                break;
            case "5"://Precio
                if (Criterio.Length > 0)
                {
                    try
                    {
                        decimal cantidad = Convert.ToDecimal(Criterio);
                        ListaHabitacion = ListaHabitacion.Where(h => h.Precio == cantidad).ToList();
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                        ListaHabitacion.Clear();
                    }
                }
                else
                {
                    ListaHabitacion = ListaHabitacion.Where(h => true).OrderBy(h => h.Precio).ToList();
                }
                break;

        }
    }

    private void GenerarReporte()
    {
        ReporteHabitaciones habitacion = new ReporteHabitaciones();

        Data = habitacion.Reporte(ListaHabitacion);

        pdfContent = "data:application/pdf;base64,";
        pdfContent += System.Convert.ToBase64String(Data);
    }
}